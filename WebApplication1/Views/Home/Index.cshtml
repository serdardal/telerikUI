@{
    ViewData["Title"] = "Home Page";
}
    <div style="margin-top:10px">
        <div id="controlBox" style="width:19%; height:100vh; float:left">
            <select id="templateNames" style="width: 100%; height: 35%; overflow-x: auto" multiple>
            </select>
            <button id="selectTemplate" onclick="handleSelectTemplate()">Open Template</button>

            <hr />

            <select id="savedFileNames" style="width:100%; height:35%; overflow-x:auto" multiple>
            </select>
            <button id="selectSavedFile" onclick="handleSelectSavedFile()">Open Saved File</button>
            <label>Readonly:</label>
            <input type="checkbox" checked id="readonlyCheckbox"/>
        </div>
        <div style="width:80%; float:left">
            <div style="float:left; margin-left:10px">
                <label>Name:</label>
                <input type="text" id="nameInput">
            </div>
            <div style="float:left; margin-left:10px">
                <label>Date:</label>
                <input type="date" id="dateInput" data-date-format="DD MMMM YYYY">
            </div>
            <button onclick="sendFilledCells()" style="margin-left: 10px" id="saveButton">Save</button>
            <button onclick="sendFilledCells()" style="margin-left: 10px" id="updateButton" hidden>Update</button>
            <div id="spreadsheet" style="float:left; width:100%"></div>
        </div>
    </div>
    



<script>
    $("#spreadsheet").kendoSpreadsheet({
        render: function (e) {
            var height = window.innerHeight;
            e.sender.element.innerHeight(height-100);
        },
        excelExport: function (e) {
            e.workbook.fileName = "Spreadsheet1.xlsx";
        },
    });
    var spread = $('#spreadsheet').getKendoSpreadsheet();
    var cells;
    var currentDocumentName;

    function b64toBlob(dataURI) {
	    var byteString = atob(dataURI.split(',')[1]);
	    var ab = new ArrayBuffer(byteString.length);
	    var ia = new Uint8Array(ab);

	    for (var i = 0; i < byteString.length; i++) {
		    ia[i] = byteString.charCodeAt(i);
	    }

	    return new Blob([ab], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
    }

    function lockAllCells() {
        var sheetList = spread.sheets();
        for (var i = 0; i < sheetList.length; i++) {
            var sheet = sheetList[i];
            var range = sheet.range("A1:AX200");
            range.enable(false);
        }

    }

    function unlockCells(docName, isTemplate) {
        var data = { documentName: docName, isTemplate: isTemplate };

        $.ajax({
            url: 'Home/GetUnlockedCells/',
            method: "post",
            contentType: "application/json",
            data: JSON.stringify(data),
            success: function (datas) {

                cells = datas;

                var sheetList = spread.sheets();
                var sheet = sheetList[0];

                for (var i = 0; i < datas.length; i++) {
                    var range = sheet.range(datas[i].rowIndex-1, datas[i].columnIndex-1)
                    range.enable(true);
                }
            }
        })

    }

    function sendFilledCells() {
        var sheetList = spread.sheets();
        var sheet = sheetList[0];

        var filledCells = [];

        for (var i = 0; i < cells.length; i++) {
            var range = sheet.range(cells[i].rowIndex - 1, cells[i].columnIndex - 1)
            var value = range.values()[0][0];

            if (value !== null)
                filledCells.push({
                rowIndex: cells[i].rowIndex,
                columnIndex: cells[i].columnIndex,
                value: value
                })
        }

        var data = {
            templateName: currentDocumentName,
            documentName: $("#nameInput").val(),
            date: $("#dateInput").val(),
            cellList: filledCells
        }

        $.ajax({
            url: 'Home/WriteToExcelFile',
            method: "post",
            contentType: "application/json",
            data: JSON.stringify(data)
        })
    }

    function loadTemplateNames(names) {
        names.map((name) => {
            var option = document.createElement("option");
            option.text = name;
            $('#templateNames').append(option);
        })
    }

    function loadSavedFileNames(names) {
        names.map((name) => {
            var option = document.createElement("option");
            option.text = name;
            $('#savedFileNames').append(option);
        })
    }

    function handleSelectTemplate() {
        var selected = $('#templateNames option:selected').val()
        openTemplate(selected);
    }

    function handleSelectSavedFile() {
        var readonly = $("#readonlyCheckbox").is(":checked")
        var selected = $('#savedFileNames option:selected').val()
        if (readonly) {
            openSavedFileReadOnly(selected)
        } else {
            openSavedFileEditMode(selected)
        }
    }


    function openTemplate(name) {
        $.ajax({
            url: 'Home/GetTemplateByName/'+name,
            method: "get",
            success: function (data) {
                spread.fromFile(b64toBlob(data)).then(() => lockAllCells()).then(() => unlockCells(name,true));
            }
        })

        currentDocumentName = name;

        $('#nameInput').val("");
        $('#nameInput').prop('disabled', false);

        $('#dateInput').prop('disabled', false);

        $('#saveButton').show()
        $('#updateButton').hide()
    }

    function openSavedFileEditMode(name) {
        $.ajax({
            url: 'Home/GetSavedFileByName/'+name,
            method: "get",
            success: function (data) {
                spread.fromFile(b64toBlob(data)).then(() => lockAllCells()).then(() => unlockCells(name,false));
            }
        })

        $('#nameInput').val(name);
        $('#nameInput').prop('disabled', true);

        $('#dateInput').prop('disabled', true);

        $('#saveButton').hide()
        $('#updateButton').show()
    }

    function openSavedFileReadOnly(name) {
        $.ajax({
            url: 'Home/GetSavedFileByName/'+name,
            method: "get",
            success: function (data) {
                spread.fromFile(b64toBlob(data)).then(() => lockAllCells());
            }
        })

        $('#nameInput').val(name);
        $('#nameInput').prop('disabled', true);

        $('#dateInput').prop('disabled', true);

        $('#saveButton').hide()
        $('#updateButton').hide()
    }

    $.ajax({
        url: 'Home/GetTemplateNames',
        method: "get",
        success: function (data) {
            loadTemplateNames(data)
        }
    })

    $.ajax({
        url: 'Home/GetSavedFileNames',
        method: "get",
        success: function (data) {
            loadSavedFileNames(data)
        }
    })

</script>

